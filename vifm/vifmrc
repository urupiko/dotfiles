" vim: filetype=vifm :
" Sample configuration file for vifm on OSX (last updated: 27 Mar, 2015)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" ------------------------------------------------------------------------------

" This is the actual command used to start vi.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.

set vicmd=nvim
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash
set history=100

set nofollowlinks
set fastrun
set sortnumbers
set undolevels=100
set novimhelp
set norunexec
" set noiec
set iec
" colorscheme Zenburn_1 
colorscheme iceberg 
" set fusehome=/tmp/vifm_FUSE
set timefmt=%y/%m/%d\ %H:%M
set wildmenu
set ignorecase
set smartcase
set nohlsearch
set incsearch
set scrolloff=4
set slowfs=curlftpfs
set statusline="  %t%= %A %10u:%-7g %15s %22d  "
set dotfiles 
set confirm=permdelete

" ------------------------------------------------------------------------------

mark h ~/
mark d ~/Desktop/
mark s ~/mnt/

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! reload :write | restart

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" Spaces in an app name will have to be escaped e.g. QuickTime\ Player.app
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf
filextype *.pdf
        \ {Open in Preview}
        \ open -a Preview.app,
fileviewer *.pdf pdftotext -nopgbrk %c -

" PostScript
filextype *.ps,*.eps open -a Preview.app

" Audio
filextype *.wav,*.mp3,*.flac,*.ogg,*.m4a,*.wma,*.ape,*.ac3
        \ {Play using MPlayerX}
        \ open -a MPlayerX.app,
        \ {Open in iTunes}
        \ open -a iTunes.app,
        \ {Open in QuickTime Player}
        \ open -a QuickTime\ Player.app,
fileviewer *.mp3 mp3info
fileviewer *.flac soxi

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob,*.flv,*.m2v,*.mov,*.webm,*.ts,*.m4v
        \ {Open in VLC}
        \ open -a VLC.app,
        \ {Open in QuickTime Player}
        \ open -a QuickTime\ Player.app,
        \ {Open in MPlayerX}
        \ open -a MPlayerX.app,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob,*.flv,*.m2v,*.mov,*.webm,*.ts,*.m4v
        \ ffprobe -pretty %c 2>&1

" Web
filextype *.html,*.htm
        \ {Open in Chrome}
        \ open -a Google\ Chrome.app,
        \ {Open in vim}
        \ vim,
fileviewer *.html,*.htm w3m -dump -T text/html

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" Image
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,
        \ open -a Preview.app,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm convert -identify %f -verbose /dev/null

" MD5
filetype *.md5
        \ {Check MD5 hash sum}
        \ md5 %f,

" GPG signature
filetype *.asc
        \ {Check signature}
        \ !!gpg --verify %c,

" Extract zip files
filetype *.zip unzip %f
fileviewer *.zip,*.jar,*.war,*.ear zip -sf %c

" Extract tar archives
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz tar -xf %f
fileviewer *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz tar -tf %f

" Extract .bz2 archives
filetype *.bz2 bzip2 -d %f

" Extract .gz files
filetype *.gz gunzip %f

" Mount .dmg archives
filetype *.dmg open

" Mount disk .img
filetype *.img open

" Open .pkg binaries
filetype *.pkg open

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer * pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For OS X:
" filetype * open

" ------------------------------------------------------------------------------

set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks

" ------------------------------------------------------------------------------

set viewcolumns=-50{name}..,{ctime},15{size}.

" Filter-out build and temporary files
"
" windo filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

nnoremap o :!open %d<cr>
nnoremap O :!open %f<cr>

" Open file in the background using its default program
nnoremap gb :!open -g %f<cr>

" Yank current directory path into the clipboard
nnoremap yd :!printf %d | pbcopy<cr>

" Yank current file path into the clipboard
nnoremap yf :!printf %c:p | pbcopy<cr>

" View preview in Quick Look
nnoremap q :!qlmanage -p %f > /dev/null 2>&1<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw<c-w>

" Open vim to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | execute ':!vim $MYVIFMRC' | restart<cr>
" Open MacVim to edit vifmrc
nnoremap ,C :!mvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Visual Studio Code 
nnoremap ,s :!code %f<cr>

" ------------------------------------------------------------------------------

" Various customization examples

" Use ag (the silver searcher) instead of grep
"
" set grepprg=ag\ --line-numbers\ %i\ %a\ %s
" set grepprg=pt\ --line-numbers\ %i\ %a\ %s

" Add additional place to look for executables
"
" let $PATH=$HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>


source ~/.config/vifm/scripts/vifm_devicons/favicons.vifm